// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name       String
  email     String   @unique
  password  String
  phone     String?  @unique
  isVerified  Boolean  @default(false)
  verificationCode     String?  
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  websites  Website[]

}

model Website {
  id              Int             @id @default(autoincrement())
  url             String          @unique
  userId          Int
  isPaused        Boolean         @default(false)
  isUp            Boolean         @default(false)
  isDNSResolved   Boolean         @default(true)
  isChecking      Boolean         @default(true)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  lastCheckedAt   DateTime?       
  lastDownAt      DateTime? 
  lastUpAt        DateTime?
  incidentCount   Int             @default(0) // Count of downtime incidents
  user            User            @relation(fields: [userId], references: [id])
  statuses        WebsiteStatus[]
  incidents       Incident[]      
}

model WebsiteStatus {
  id           String   @id @default(cuid())
  websiteId    Int
  status       String
  responseTime Int
  region       String       
  timestamp    DateTime @default(now())
  website      Website  @relation(fields: [websiteId], references: [id], onDelete: Cascade)

  @@index([websiteId, timestamp])
}

model Incident {
  id             String    @id @default(cuid())
  websiteId      Int
  startTime      DateTime  @default(now())
  endTime        DateTime?
  isResolved     Boolean   @default(false)
  responseTime   Int       @default(0)
  duration       Int?     
  region         String 
  reason         String
  isAcknowledged Boolean
  website        Website   @relation(fields: [websiteId], references: [id], onDelete: Cascade)
  
  @@index([websiteId, startTime])
}




